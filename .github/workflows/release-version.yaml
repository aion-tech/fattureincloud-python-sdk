name: Release Python SDK
on: [workflow_dispatch]

jobs:
  release-version:
    runs-on: ubuntu-latest
    name: Release sdk
    steps:
      - id: checkout
        name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.FATTUREINCLOUD_BOT_TOKEN }}

      - id: init-git
        name: Init GIT
        run: |
          git config --global user.email "info@fattureincloud.it"
          git config --global user.name "fattureincloud-bot"

      - id: setup-node
        name: Setup Node.js
        uses: actions/setup-node@v2

      - id: setup-python
        name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - id: install-dependencies
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - id: setup-libraries
        name: Install libraries
        run: |
          npm install -g yarn
          yarn global add standard-version
          sudo add-apt-repository ppa:rmescandon/yq -y
          sudo apt update
          sudo apt install yq -y
          cd ./scripts/
          yarn

      # We read the version from the sdk-version.yaml file and create the tag
      # If it is needed to bump version, launch the related workflow
      - id: read-python-sdk-version
        name: Read Python SDK version
        run: |
          SDK_VERSION=$(yq e '.info.version' ./sdk-version.yaml)
          echo "Releasing version: $SDK_VERSION"
          echo "sdk_version=$SDK_VERSION" >> $GITHUB_ENV

      # Here we use standard-version just to generate the changelog
      - id: generate-changelog
        name: Generate Changelog
        run: |
          standard-version --skip.bump --skip.tag

      - id: git-push
        name: Pushing to Git repo
        if: ${{ !env.ACT }}
        run: |
          git push origin

      - id: create-tag
        name: Create tag
        if: ${{ !env.ACT }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ env.sdk_version }}",
              sha: context.sha
            })

      - id: build-package
        name: Build package
        run: python -m build

      - id: publish
        name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}